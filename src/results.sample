 ☇ 's\s\s ⮕ null
 ☇ )\right-parenthesis\close bracket ⮕ null
 ☇ )\right-parenthesis\right bracket · right ⮕ null
 ☇ ,\comma\comma ⮕ null
 ☇ ;\semicolon\semicolon ⮕ null
 ☇ D\uppercase-letter\capital D ⮕ null
 ☇ Delta ⮕ null
 ☇ Dick ⮕ null
 ☇ Québec ⮕ null
 ☇ Tango ⮕ null
 ☇ VI · M\letter ⮕ null
 ☇ \new-line\new line ⮕ <enter>
 ☇ \no-space\no space ⮕ null
 ☇ a\determiner ⮕ null
 ☇ acre ⮕ null
 ☇ and · \no-space\no space ⮕ null
 ☇ and ⮕ null
 ☇ append · end · key · ;\semicolon\semicolon ⮕ null
 ☇ append · end ⮕ null
 ☇ are ⮕ null
 ☇ arrow ⮕ " => "
 ☇ at · the · voice ⮕ null
 ☇ at ⮕ null
 ☇ backspace · backspace · backspace · backspace ⮕ <backspace> <backspace> <backspace> <backspace>
 ☇ backspace · backspace · dictate · backspace ⮕ <backspace> <backspace> <backspace>
 ☇ backspace · backspace ⮕ <backspace> <backspace>
 ☇ backspace ⮕ <backspace>
 ☇ bad ⮕ null
 ☇ bitch ⮕ null
 ☇ bold · bottom ⮕ null
 ☇ brightness · hundred ⮕ null
 ☇ brightness · ten ⮕ null
 ☇ call · by · three ⮕ null
 ☇ call · function ⮕ "function()" <left>
 ☇ call · hello ⮕ "hello()" <left>
 ☇ call · type ⮕ "type()" <left>
 ☇ capital · and ⮕ <shift-&>
 ☇ change · around · right · curly ⮕ null
 ☇ change · around · rightly ⮕ null
 ☇ chest ⮕ null
 ☇ cities ⮕ null
 ☇ close · buffer ⮕ null
 ☇ close · window ⮕ [i3 "kill"]
 ☇ close ⮕ null
 ☇ commit ⮕ null
 ☇ control · C\letter ⮕ <ctrl-c>
 ☇ control · C\letter\letter C ⮕ <ctrl-c>
 ☇ control · D\letter ⮕ <ctrl-d>
 ☇ control · K\letter ⮕ <ctrl-k>
 ☇ control · W\letter · control · W\letter ⮕ <ctrl-w> <ctrl-w>
 ☇ control · W\letter ⮕ <ctrl-w>
 ☇ control · seek ⮕ null
 ☇ control · seems ⮕ null
 ☇ control · the ⮕ null
 ☇ control ⮕ null
 ☇ controlled · the ⮕ null
 ☇ delete · line ⮕ null
 ☇ delete · word ⮕ null
 ☇ dictate · Delta ⮕ "d"
 ☇ dictate · India · dictate · Tango ⮕ "idictatet"
 ☇ dictate · ad · space · .\dot\dot ⮕ "ad ."
 ☇ dictate · ad ⮕ "ad"
 ☇ dictate · backspace ⮕ <backspace>
 ☇ dictate · commit ⮕ "commit"
 ☇ dictate · golf · India · Tango · space ⮕ "git "
 ☇ dictate · golf ⮕ "g"
 ☇ dictate · push ⮕ "push"
 ☇ dictate · space · dictate · .\dot\dot ⮕ " dictate."
 ☇ dictate · space · dictate · –\dash\dash ⮕ " dictate-"
 ☇ dictate · space ⮕ " "
 ☇ dictate · the ⮕ "the"
 ☇ dictate · –\dash\dash ⮕ "-"
 ☇ dictate ⮕ null
 ☇ dictates · news ⮕ "news"
 ☇ didn't · get · a\determiner · a\determiner · in · better · names · with · \new-line\next line · than · eleven · thousand · nine ⮕ null
 ☇ do · Windows · search ⮕ null
 ☇ down · down · down · down ⮕ <down> <down> <down> <down>
 ☇ down · down · down ⮕ <down> <down> <down>
 ☇ down · down · into ⮕ <down> <down> <enter>
 ☇ down · for ⮕ null
 ☇ down · into ⮕ <down> <enter>
 ☇ down · on · down · into ⮕ null
 ☇ down · ten ⮕ null
 ☇ down · twenty ⮕ null
 ☇ down ⮕ <down>
 ☇ echo ⮕ null
 ☇ editor · open · editor · voice ⮕ null
 ☇ editor · voice ⮕ null
 ☇ equals ⮕ null
 ☇ escape · delete · line ⮕ null
 ☇ escape · escape ⮕ <escape> <escape>
 ☇ escape ⮕ <escape>
 ☇ find · commander ⮕ null
 ☇ find · hello ⮕ null
 ☇ find · main ⮕ null
 ☇ find · switch ⮕ null
 ☇ find · via · IM ⮕ null
 ☇ find · voice ⮕ null
 ☇ find · window ⮕ null
 ☇ find ⮕ null
 ☇ five · down ⮕ [repeat 5 <down>]
 ☇ for ⮕ null
 ☇ four · down ⮕ [repeat 4 <down>]
 ☇ from · voice ⮕ null
 ☇ go to sleep ⮕ null
 ☇ go · to · bottom ⮕ null
 ☇ go · to · top ⮕ null
 ☇ go · top ⮕ null
 ☇ golf · India ⮕ null
 ☇ good · top ⮕ null
 ☇ hide · windows ⮕ null
 ☇ him ⮕ null
 ☇ hundred ⮕ null
 ☇ in · better · times ⮕ null
 ☇ in · it ⮕ null
 ☇ in ⮕ null
 ☇ insert · escape ⮕ null
 ☇ insert · hello ⮕ null
 ☇ insert ⮕ null
 ☇ into · into ⮕ <enter> <enter>
 ☇ into · next ⮕ null
 ☇ into ⮕ <enter>
 ☇ is ⮕ null
 ☇ it · nine · thousand · to · say ⮕ null
 ☇ it ⮕ null
 ☇ jump · backwards ⮕ null
 ☇ just ⮕ null
 ☇ key · at · tree · voice ⮕ null
 ☇ key · capital · and ⮕ null
 ☇ key · capital · in ⮕ null
 ☇ key · left · curly ⮕ "{"
 ☇ key · voice ⮕ null
 ☇ keys · ;\semicolon\semicolon ⮕ null
 ☇ left · left · left · left · left · left ⮕ <left> <left> <left> <left> <left> <left>
 ☇ left ⮕ <left>
 ☇ long ⮕ null
 ☇ m\spelling-letter\M ⮕ null
 ☇ move · window · left ⮕ [i3 "move left"]
 ☇ move · window · right ⮕ [i3 "move right"]
 ☇ my ⮕ null
 ☇ n\spelling-letter\November ⮕ null
 ☇ name ⮕ null
 ☇ next ⮕ null
 ☇ no one · do · so ⮕ null
 ☇ node · require · FS ⮕ null
 ☇ node · require · render ⮕ null
 ☇ of · an · error · the · voice ⮕ null
 ☇ of · the ⮕ null
 ☇ of ⮕ null
 ☇ on ⮕ null
 ☇ one\pronoun · down ⮕ <down>
 ☇ open · Incognito ⮕ [i3 "exec google-chrome -incognito"]
 ☇ open · above ⮕ null
 ☇ open · at · a\determiner ⮕ null
 ☇ open · editor · voice ⮕ [i3 "exec gvim -c ':NERDTree /home/josh/voice-code/pegvoice/src'"]
 ☇ open · editor ⮕ [i3 "exec gvim -c ':NERDTree /home/josh'"]
 ☇ open · ended · out · voice ⮕ null
 ☇ open · escape ⮕ null
 ☇ open · firm ⮕ null
 ☇ open · hello · _\underscore\underscore · world ⮕ null
 ☇ open · it · will · need ⮕ null
 ☇ open · terminal · voice ⮕ [i3 "exec gnome-terminal --hide-menubar --working-directory=\"/home/josh/voice-code/pegvoice/src\""]
 ☇ open · terminal ⮕ [i3 "exec gnome-terminal --hide-menubar --working-directory=\"/home/josh\""]
 ☇ open · them ⮕ null
 ☇ open ⮕ null
 ☇ opens ⮕ null
 ☇ opinion · some ⮕ null
 ☇ or · bottom ⮕ null
 ☇ page · down ⮕ <pagedown>
 ☇ page · up ⮕ <pageup>
 ☇ paste · line ⮕ null
 ☇ paste ⮕ null
 ☇ pizza · party ⮕ null
 ☇ playback ⮕ null
 ☇ prepend ⮕ null
 ☇ redo ⮕ <ctrl-r>
 ☇ right · into ⮕ <right> <enter>
 ☇ right · right · right · right ⮕ <right> <right> <right> <right>
 ☇ right · right ⮕ <right> <right>
 ☇ right · wait · right · white · grout · weight ⮕ null
 ☇ right ⮕ <right>
 ☇ safe ⮕ null
 ☇ save · exit ⮕ null
 ☇ save ⮕ null
 ☇ screen · brightness · one\number · hundred ⮕ [i3 "exec brightness 100"]
 ☇ screen · brightness · one\number ⮕ [i3 "exec brightness 1"]
 ☇ screen · brightness · zero ⮕ [i3 "exec brightness 0"]
 ☇ screen · for ⮕ [i3 "workspace 4"]
 ☇ screen · four ⮕ [i3 "workspace 4"]
 ☇ screen · off ⮕ null
 ☇ screen · one\number ⮕ [i3 "workspace 1"]
 ☇ screen · one\pronoun ⮕ [i3 "workspace 1"]
 ☇ screen · three ⮕ [i3 "workspace 3"]
 ☇ screen · two ⮕ [i3 "workspace 2"]
 ☇ search · voice ⮕ null
 ☇ showed · up ⮕ null
 ☇ shut · up ⮕ null
 ☇ sky · phone ⮕ null
 ☇ slap · it ⮕ <enter>
 ☇ slap · slap ⮕ <enter> <enter>
 ☇ slap ⮕ <enter>
 ☇ sleep ⮕ null
 ☇ space ⮕ null
 ☇ spell · that · v\spelling-letter\letter V · e\spelling-letter\E · n\spelling-letter\N · f\spelling-letter\letter F ⮕ null
 ☇ stone ⮕ null
 ☇ strengths · /\slash\slash ⮕ null
 ☇ string · ABC ⮕ null
 ☇ string · X\letter ⮕ <'> "x" <'>
 ☇ string · hello ⮕ null
 ☇ string · kill ⮕ null
 ☇ string ⮕ null
 ☇ strings · /\slash\slash ⮕ null
 ☇ switch · buffer ⮕ null
 ☇ switch ⮕ null
 ☇ tab · one ⮕ null
 ☇ ten · lightweight · one\number · ten · right ⮕ null
 ☇ ten · right ⮕ [repeat 10 <right>]
 ☇ ten · up ⮕ [repeat 10 <up>]
 ☇ test ⮕ null
 ☇ that ⮕ null
 ☇ the · close ⮕ null
 ☇ the ⮕ null
 ☇ this ⮕ null
 ☇ three · left · control · K\letter ⮕ [repeat 3 <left>] <ctrl-k>
 ☇ three · up ⮕ [repeat 3 <up>]
 ☇ to ⮕ null
 ☇ tree · voice ⮕ null
 ☇ twenty · down ⮕ [repeat 20 <down>]
 ☇ twenty · up ⮕ [repeat 20 <up>]
 ☇ two · down ⮕ [repeat 2 <down>]
 ☇ two · up ⮕ [repeat 2 <up>]
 ☇ type · CLOS ⮕ null
 ☇ type · F\letter · I\pronoun · N\letter · D\letter ⮕ "find"
 ☇ type · HEI · will · all ⮕ null
 ☇ type · IM · IT ⮕ null
 ☇ type · I\pronoun · T\letter ⮕ "it"
 ☇ type · STA · RT ⮕ null
 ☇ type · T\letter · A\letter ⮕ "ta"
 ☇ type · X\letter · X\letter ⮕ "xx"
 ☇ type · _\underscore\underscore · _\underscore\underscore ⮕ "__"
 ☇ type · capital · d\spelling-letter\D ⮕ "D"
 ☇ type · close ⮕ null
 ☇ type · hello ⮕ null
 ☇ type · o\spelling-letter\O ⮕ "o"
 ☇ type · s\spelling-letter\S ⮕ "s"
 ☇ type · semicolon ⮕ ";"
 ☇ type · u\spelling-letter\U ⮕ "u"
 ☇ type ⮕ null
 ☇ under ⮕ null
 ☇ undo ⮕ null
 ☇ up · a\determiner · hundred ⮕ null
 ☇ up · down · up · up · down ⮕ <up> <down> <up> <up> <down>
 ☇ up · twenty ⮕ null
 ☇ up · up · up ⮕ <up> <up> <up>
 ☇ up · up ⮕ <up> <up>
 ☇ up ⮕ <up>
 ☇ vim ⮕ null
 ☇ wake up ⮕ null
 ☇ wake · up ⮕ [noop]
 ☇ who ⮕ null
 ☇ window · close ⮕ [i3 "kill"]
 ☇ window · closes ⮕ null
 ☇ window · down · window · close ⮕ [i3 "focus down"] [i3 "kill"]
 ☇ window · down · window · move · left ⮕ [i3 "focus down"] [i3 "move left"]
 ☇ window · down ⮕ [i3 "focus down"]
 ☇ window · float ⮕ [i3 "floating toggle"]
 ☇ window · left ⮕ [i3 "focus left"]
 ☇ window · move · left ⮕ [i3 "move left"]
 ☇ window · right · window · left ⮕ [i3 "focus right"] [i3 "focus left"]
 ☇ window · right ⮕ [i3 "focus right"]
 ☇ window · up · close · window ⮕ [i3 "focus up"] [i3 "kill"]
 ☇ window · up ⮕ [i3 "focus up"]
 ☇ word · close ⮕ "close"
 ☇ words · close ⮕ "close"
 ☇ words · hello ⮕ "hello"
 ☇ yanking · on ⮕ null
chrome slack ☇ 's\s\s ⮕ null
chrome slack ☇ Lima ⮕ "l"
chrome slack ☇ a\determiner · whole ⮕ null
chrome slack ☇ delete · delete · delete ⮕ null
chrome slack ☇ delete ⮕ null
chrome slack ☇ link ⮕ <escape> "f"
chrome slack ☇ offer ⮕ "a"
chrome slack ☇ pizza · party ⮕ ":party-dino: :pizzaspin: :pizzaspin2: :antipizza: :pizzaspin3: :pizzaspin4: :party-dino:"
chrome slack ☇ tab ⮕ <tab>
chrome slack ☇ to ⮕ null
chrome ☇ 's\s\s ⮕ null
chrome ☇ 's\z\z ⮕ null
chrome ☇ Alpha · Delta ⮕ "ad"
chrome ☇ Charlie ⮕ "c"
chrome ☇ Delta · Delta ⮕ "dd"
chrome ☇ Delta · Mike ⮕ "dm"
chrome ☇ Delta · marker ⮕ null
chrome ☇ FS ⮕ null
chrome ☇ Lima · Papa ⮕ "lp"
chrome ☇ Link ⮕ <escape> "f"
chrome ☇ Move · to · wind · five ⮕ null
chrome ☇ Page · Page · Page · Page ⮕ <pagedown> <pagedown> <pagedown> <pagedown>
chrome ☇ Page · Page ⮕ <pagedown> <pagedown>
chrome ☇ Page ⮕ <pagedown>
chrome ☇ Tab · one\number ⮕ <ctrl-1>
chrome ☇ YC ⮕ null
chrome ☇ \spelling-cap\cap · ten ⮕ null
chrome ☇ \tab-key\tab key · one\number ⮕ <ctrl-1>
chrome ☇ \tab-key\tab key · three ⮕ <ctrl-3>
chrome ☇ \tab-key\tab key ⮕ <tab>
chrome ☇ a\determiner · job ⮕ null
chrome ☇ and ⮕ null
chrome ☇ big · link ⮕ <escape> "F"
chrome ☇ bowel ⮕ null
chrome ☇ close · close · close · close · close ⮕ <ctrl-w> <ctrl-w> <ctrl-w> <ctrl-w> <ctrl-w>
chrome ☇ close · tab ⮕ <ctrl-w>
chrome ☇ close ⮕ <ctrl-w>
chrome ☇ dictate · I\pronoun ⮕ "i"
chrome ☇ dictate · golf ⮕ "g"
chrome ☇ dictate · news · .\dot\dot · Y\letter · combination · .com\\dot com ⮕ "news.ycombination.com"
chrome ☇ dictate · news ⮕ "news"
chrome ☇ dictates · news · .\dot\dot · Y\letter · combination · .com\\dot com ⮕ "news.ycombination.com"
chrome ☇ down · down · slap ⮕ <down> <down> <enter>
chrome ☇ escape · escape ⮕ <escape> <escape>
chrome ☇ escape ⮕ <escape>
chrome ☇ foxtrot · straight ⮕ null
chrome ☇ he ⮕ null
chrome ☇ link ⮕ <escape> "f"
chrome ☇ move · screen · five ⮕ null
chrome ☇ move · window · five ⮕ null
chrome ☇ move · window · screen · five ⮕ null
chrome ☇ new · tab ⮕ null
chrome ☇ open · tab ⮕ <ctrl-t>
chrome ☇ page · down ⮕ <pagedown>
chrome ☇ page · up ⮕ <pageup>
chrome ☇ page ⮕ <pagedown>
chrome ☇ screen · for ⮕ [i3 "workspace 4"]
chrome ☇ screen · four ⮕ [i3 "workspace 4"]
chrome ☇ screen · move · five ⮕ null
chrome ☇ screen · three ⮕ [i3 "workspace 3"]
chrome ☇ see ⮕ null
chrome ☇ slap ⮕ <enter>
chrome ☇ tab · nine ⮕ <ctrl-9>
chrome ☇ tab ⮕ <tab>
chrome ☇ table · one\number ⮕ null
chrome ☇ ten · ten ⮕ null
chrome ☇ to ⮕ null
chrome ☇ wake up ⮕ null
chrome ☇ will · be ⮕ null
chrome ☇ window · left · )\right-parenthesis\close paren ⮕ null
chrome ☇ window · left ⮕ [i3 "focus left"]
chrome ☇ window · move · screen · five ⮕ [i3 "move container to workspace 5"]
chrome ☇ window · three ⮕ null
terminal ☇ control · see ⮕ <ctrl-c>
terminal ☇ controversy ⮕ null
terminal ☇ rebase ⮕ "git rebase -i HEAD~25"
terminal ☇ slap ⮕ <enter>
vim vim-insert vim-visual ☇ forward · a\determiner ⮕ "forwarda"
vim vim-insert ☇ "\left-double-quote\begin quote ⮕ <">
vim vim-insert ☇ 's\s\s ⮕ <'> "s"
vim vim-insert ☇ (\left-parenthesis\left paren · )\right-parenthesis\right paren ⮕ "()"
vim vim-insert ☇ (\left-parenthesis\left paren ⮕ "("
vim vim-insert ☇ )\right-parenthesis\right paren ⮕ ")"
vim vim-insert ☇ .\dot\dot ⮕ "."
vim vim-insert ☇ .com\\dot com ⮕ ".com"
vim vim-insert ☇ /\slash\slash · the ⮕ "/the"
vim vim-insert ☇ /\slash\slash ⮕ "/"
vim vim-insert ☇ :\colon\colon · letter ⮕ ":letter"
vim vim-insert ☇ :\colon\colon ⮕ ":"
vim vim-insert ☇ ;\semicolon\semicolon · /\slash\slash · space · star · tab ⮕ ";/ *	"
vim vim-insert ☇ ;\semicolon\semicolon · slap ⮕ ";slap"
vim vim-insert ☇ ;\semicolon\semicolon ⮕ ";"
vim vim-insert ☇ ABCD · EFG ⮕ "abcdefg"
vim vim-insert ☇ Alpha ⮕ "a"
vim vim-insert ☇ Charlie · Delta ⮕ "cd"
vim vim-insert ☇ Charlie ⮕ "c"
vim vim-insert ☇ Delta · Echo · Charlie · brother ⮕ "decb"
vim vim-insert ☇ Echo · foxtrot · golf · India ⮕ "efgi"
vim vim-insert ☇ H\letter · I\pronoun · J\letter · K\letter · on · P\letter ⮕ "hijkonp"
vim vim-insert ☇ Hotel · India ⮕ "hi"
vim vim-insert ☇ I\pronoun ⮕ "i"
vim vim-insert ☇ Juliet · kilo · Lima · Mike ⮕ "jklm"
vim vim-insert ☇ News ⮕ "news"
vim vim-insert ☇ November · Oscar · Papa · Québec ⮕ "nopq"
vim vim-insert ☇ November ⮕ "n"
vim vim-insert ☇ Oscar ⮕ "o"
vim vim-insert ☇ Papa ⮕ "p"
vim vim-insert ☇ Québec ⮕ "q"
vim vim-insert ☇ Romeo · Sierra · Tango · uniform · Victor · whiskey · x-ray · Yankee · Zulu ⮕ "rstuvwxyz"
vim vim-insert ☇ T\letter ⮕ "t"
vim vim-insert ☇ Tango · Sierra · Romeo ⮕ "tsr"
vim vim-insert ☇ Victor ⮕ "v"
vim vim-insert ☇ X\letter ⮕ "x"
vim vim-insert ☇ Y\letter · combination ⮕ "ycombination"
vim vim-insert ☇ Zulu ⮕ "z"
vim vim-insert ☇ [\left-square-bracket\left square bracket ⮕ "["
vim vim-insert ☇ \new-line\new line ⮕ <enter>
vim vim-insert ☇ ]\right-square-bracket\right square bracket ⮕ "]"
vim vim-insert ☇ ^\caret\caret · –\dash\dash · dollar · equals · hash ⮕ "^-$ === #"
vim vim-insert ☇ ^\caret\caret · –\dash\dash · dollar ⮕ "^-$"
vim vim-insert ☇ _\underscore\underscore · world ⮕ "_world"
vim vim-insert ☇ _\underscore\underscore ⮕ "_"
vim vim-insert ☇ `\backquote\back tick ⮕ <backtick>
vim vim-insert ☇ a\determiner · row ⮕ "arow"
vim vim-insert ☇ a\determiner · space · team · space ⮕ "a team "
vim vim-insert ☇ alpha ⮕ "a"
vim vim-insert ☇ and · do ⮕ "&do"
vim vim-insert ☇ and ⮕ "&"
vim vim-insert ☇ arrow ⮕ " => "
vim vim-insert ☇ backspace · ,\comma\comma · space ⮕ <backspace> ", "
vim vim-insert ☇ backspace · ?\question-mark\question mark ⮕ <backspace> "?"
vim vim-insert ☇ backspace · arrow ⮕ <backspace> " => "
vim vim-insert ☇ backspace · backspace · backspace · backspace · backspace · backspace ⮕ <backspace> <backspace> <backspace> <backspace> <backspace> <backspace>
vim vim-insert ☇ backspace · backspace · backspace · backspace ⮕ <backspace> <backspace> <backspace> <backspace>
vim vim-insert ☇ backspace · backspace · backspace ⮕ <backspace> <backspace> <backspace>
vim vim-insert ☇ backspace · backspace · based ⮕ <backspace> <backspace> "based"
vim vim-insert ☇ backspace · backspace · space ⮕ <backspace> <backspace> " "
vim vim-insert ☇ backspace · backspace · type · you · T\letter ⮕ <backspace> <backspace> "typeyout"
vim vim-insert ☇ backspace · backspace ⮕ <backspace> <backspace>
vim vim-insert ☇ backspace · space ⮕ <backspace> " "
vim vim-insert ☇ backspace ⮕ <backspace>
vim vim-insert ☇ base · :\colon\colon · dictate ⮕ "base:dictate"
vim vim-insert ☇ big · alpha ⮕ "A"
vim vim-insert ☇ big · link ⮕ "biglink"
vim vim-insert ☇ big · quote ⮕ <">
vim vim-insert ☇ bravo ⮕ "b"
vim vim-insert ☇ brother ⮕ "b"
vim vim-insert ☇ call · key ⮕ "key()" <left>
vim vim-insert ☇ call · word · type ⮕ "word()" <left> "type"
vim vim-insert ☇ called · type ⮕ "calledtype"
vim vim-insert ☇ cat ⮕ "cat"
vim vim-insert ☇ change · of · word ⮕ "changeofword"
vim vim-insert ☇ change · space ⮕ "change "
vim vim-insert ☇ change · two · )\right-parenthesis\right paren ⮕ "change2)"
vim vim-insert ☇ cue · right · :\colon\colon ⮕ "cue" <right> ":"
vim vim-insert ☇ delete · arrow ⮕ <delete> " => "
vim vim-insert ☇ delete · delete · delete · delete · delete ⮕ <delete> <delete> <delete> <delete> <delete>
vim vim-insert ☇ delete ⮕ <delete>
vim vim-insert ☇ dictate · hello ⮕ "hello"
vim vim-insert ☇ dictate · word · one\number · one\number ⮕ "one1"
vim vim-insert ☇ dictate · word · one\number ⮕ "one"
vim vim-insert ☇ dictate ⮕ "dictate"
vim vim-insert ☇ dictates · news · .\dot\dot · Y\letter · combination · .com\\dot com ⮕ "news.ycombination.com"
vim vim-insert ☇ double · backspace ⮕ [repeat 2 <backspace>]
vim vim-insert ☇ double · quote ⮕ [repeat 2 <'>]
vim vim-insert ☇ double · under ⮕ "doubleunder"
vim vim-insert ☇ equal ⮕ " === "
vim vim-insert ☇ equals ⮕ " === "
vim vim-insert ☇ escape · and · do ⮕ <escape> "u"
vim vim-insert ☇ escape · and ⮕ <escape> "&"
vim vim-insert ☇ escape · append · end ⮕ <escape> "A" [mode +vim-insert]
vim vim-insert ☇ escape · back · be ⮕ <escape> "Fb"
vim vim-insert ☇ escape · down · down · down · down · down ⮕ <escape> <down> <down> <down> <down> <down>
vim vim-insert ☇ escape · for · left ⮕ <escape> "4" <left>
vim vim-insert ☇ escape · right ⮕ <escape> <right>
vim vim-insert ☇ escape · save ⮕ <escape> <escape> ":w" <enter>
vim vim-insert ☇ escape · three · left ⮕ <escape> "3" <left>
vim vim-insert ☇ escape · under ⮕ <escape> "u"
vim vim-insert ☇ escape · visual ⮕ <escape> "v" [mode +vim-visual]
vim vim-insert ☇ escape ⮕ <escape>
vim vim-insert ☇ escaped · delete · line ⮕ <escape> "dd"
vim vim-insert ☇ express ⮕ "express"
vim vim-insert ☇ extra ⮕ "extra"
vim vim-insert ☇ first · above · voice · only ⮕ "firstabovevoiceonly"
vim vim-insert ☇ first · space · commit · space · by · space ⮕ "first commit by "
vim vim-insert ☇ five · backspace ⮕ "5" <backspace>
vim vim-insert ☇ five · left ⮕ "5" <left>
vim vim-insert ☇ five ⮕ "5"
vim vim-insert ☇ for · backspace ⮕ "4" <backspace>
vim vim-insert ☇ forward ⮕ "forward"
vim vim-insert ☇ found ⮕ "found"
vim vim-insert ☇ from ⮕ "from"
vim vim-insert ☇ grade · or · equal ⮕ "gradeor === "
vim vim-insert ☇ grader · less · equal · not · equal ⮕ " >  <=  !== "
vim vim-insert ☇ grader ⮕ " > "
vim vim-insert ☇ greater · or · equal ⮕ " >= "
vim vim-insert ☇ greater · space · /\slash\slash · space ⮕ " >  / "
vim vim-insert ☇ greater ⮕ " > "
vim vim-insert ☇ hello · _\underscore\underscore · world ⮕ "hello_world"
vim vim-insert ☇ hello · world ⮕ "helloworld"
vim vim-insert ☇ hello ⮕ "hello"
vim vim-insert ☇ hotel · golf · golf · foxtrot ⮕ "hggf"
vim vim-insert ☇ hotel ⮕ "h"
vim vim-insert ☇ how · are · you · today ⮕ "howareyoutoday"
vim vim-insert ☇ in ⮕ "in"
vim vim-insert ☇ insert · hello ⮕ "inserthello"
vim vim-insert ☇ into ⮕ <enter>
vim vim-insert ☇ is ⮕ "is"
vim vim-insert ☇ joke ⮕ "joke"
vim vim-insert ☇ key · (\left-parenthesis\left paren ⮕ "("
vim vim-insert ☇ key · )\right-parenthesis\right paren ⮕ ")"
vim vim-insert ☇ key · Roger ⮕ "keyroger"
vim vim-insert ☇ key · ]\right-square-bracket\right square bracket ⮕ "]"
vim vim-insert ☇ key · equal ⮕ "="
vim vim-insert ☇ key · greater ⮕ ">"
vim vim-insert ☇ key · left · curly ⮕ "{"
vim vim-insert ☇ key · left ⮕ <left>
vim vim-insert ☇ key · less ⮕ "<"
vim vim-insert ☇ key · right · curly ⮕ "}"
vim vim-insert ☇ key · right ⮕ <right>
vim vim-insert ☇ left · curly ⮕ "{"
vim vim-insert ☇ left · triangle · [\left-square-bracket\left square bracket ⮕ "<["
vim vim-insert ☇ left · triangle ⮕ "<"
vim vim-insert ☇ left · try ⮕ <left> "try"
vim vim-insert ☇ left ⮕ <left>
vim vim-insert ☇ less · space · /\slash\slash · /\slash\slash ⮕ " <  //"
vim vim-insert ☇ less ⮕ " < "
vim vim-insert ☇ letter ⮕ "letter"
vim vim-insert ☇ macro · alpha ⮕ "macroa"
vim vim-insert ☇ macro · over ⮕ "macroover"
vim vim-insert ☇ marks · space ⮕ "marks "
vim vim-insert ☇ news · .\dot\dot · Y\letter · ,\comma\comma · needed ⮕ "news.y,needed"
vim vim-insert ☇ news · .\dot\dot · Y\letter · combination · .com\\dot com ⮕ "news.ycombination.com"
vim vim-insert ☇ news · .\dot\dot · Y\letter · combination ⮕ "news.ycombination"
vim vim-insert ☇ news · .\dot\dot ⮕ "news."
vim vim-insert ☇ next ⮕ "next"
vim vim-insert ☇ node · require · FS ⮕ "const fs = require(" <'> "fs" <'> ");" <enter>
vim vim-insert ☇ node ⮕ "node"
vim vim-insert ☇ not · equal ⮕ " !== "
vim vim-insert ☇ not · try ⮕ "nottry"
vim vim-insert ☇ number · fifty ⮕ "50"
vim vim-insert ☇ number · five ⮕ "5"
vim vim-insert ☇ number · nought ⮕ "0"
vim vim-insert ☇ number · of · narrow ⮕ "numberofnarrow"
vim vim-insert ☇ number · one\number · five · five ⮕ "155"
vim vim-insert ☇ number · one\number · zero · zero ⮕ "100"
vim vim-insert ☇ number · zero ⮕ "0"
vim vim-insert ☇ number ⮕ "number"
vim vim-insert ☇ of · trial ⮕ "oftrial"
vim vim-insert ☇ of · word · type ⮕ "oftype"
vim vim-insert ☇ offer · bra · those ⮕ "abrathose"
vim vim-insert ☇ offer · brother · Charlie · Delta · Echo · foxtrot · golf ⮕ "abcdefg"
vim vim-insert ☇ offer · brother · Charlie ⮕ "abc"
vim vim-insert ☇ one\number · ;\semicolon\semicolon ⮕ "1;"
vim vim-insert ☇ one\number · one\number ⮕ "11"
vim vim-insert ☇ one\number · word · one\number · one\number ⮕ "1one1"
vim vim-insert ☇ open · (\left-parenthesis\left paren · the ⮕ "open(the"
vim vim-insert ☇ open · incognito ⮕ [i3 "exec google-chrome -incognito"]
vim vim-insert ☇ open · left · triangle ⮕ "open<"
vim vim-insert ☇ open · number · one\number · zero · zero ⮕ "open100"
vim vim-insert ☇ open · number · one\number ⮕ "open1"
vim vim-insert ☇ open ⮕ "open"
vim vim-insert ☇ our · space · are · space · you · space · today · space ⮕ "our are you today "
vim vim-insert ☇ percent · period · pipe ⮕ "%.|"
vim vim-insert ☇ period ⮕ "."
vim vim-insert ☇ plus · question ⮕ "+?"
vim vim-insert ☇ question ⮕ "?"
vim vim-insert ☇ quote ⮕ <'>
vim vim-insert ☇ quotes · delete · quote ⮕ <'> "delete" <'>
vim vim-insert ☇ require · FS ⮕ "requirefs"
vim vim-insert ☇ right · triangle · ]\right-square-bracket\right square bracket ⮕ ">]"
vim vim-insert ☇ screen · one\number ⮕ [i3 "workspace 1"]
vim vim-insert ☇ six · backspace ⮕ "6" <backspace>
vim vim-insert ☇ six ⮕ "6"
vim vim-insert ☇ slap · greater · equal ⮕ <enter> " >= "
vim vim-insert ☇ slap · less · equal ⮕ <enter> " <= "
vim vim-insert ☇ slap ⮕ <enter>
vim vim-insert ☇ soon ⮕ "soon"
vim vim-insert ☇ sooner ⮕ "z"
vim vim-insert ☇ space · /\slash\slash · space ⮕ " / "
vim vim-insert ☇ space · less · ;\semicolon\semicolon · slap ⮕ "  < ;slap"
vim vim-insert ☇ space · less ⮕ "  < "
vim vim-insert ☇ space ⮕ " "
vim vim-insert ☇ spell · forward ⮕ "spellforward"
vim vim-insert ☇ spell · that ⮕ "spellthat"
vim vim-insert ☇ spell · then ⮕ "spellthen"
vim vim-insert ☇ spell ⮕ "spell"
vim vim-insert ☇ spells · space ⮕ "spells "
vim vim-insert ☇ spelt ⮕ "spelt"
vim vim-insert ☇ squad · [\left-square-bracket\left square bracket ⮕ "squad["
vim vim-insert ☇ string · hello ⮕ "stringhello"
vim vim-insert ☇ tab ⮕ "	"
vim vim-insert ☇ that · it ⮕ "thatit"
vim vim-insert ☇ that ⮕ "that"
vim vim-insert ☇ the · close · backspace ⮕ "theclose" <backspace>
vim vim-insert ☇ the · quote ⮕ "the" <'>
vim vim-insert ☇ this ⮕ "this"
vim vim-insert ☇ to · write ⮕ "2write"
vim vim-insert ☇ to ⮕ "2"
vim vim-insert ☇ type · (\left-parenthesis\left paren ⮕ "("
vim vim-insert ☇ type · C\letter ⮕ "c"
vim vim-insert ☇ type · H\letter · E\letter · Al · Al · oh ⮕ "hello"
vim vim-insert ☇ up ⮕ <up>
vim vim-insert ☇ voice · space · only · space ⮕ "voice only "
vim vim-insert ☇ were · tallow ⮕ "weretallow"
vim vim-insert ☇ when ⮕ "when"
vim vim-insert ☇ word · one\number · one\number ⮕ "one1"
vim vim-insert ☇ word · one\number ⮕ "one"
vim vim-insert ☇ word · type ⮕ "type"
vim vim-insert ☇ x-ray · Zulu ⮕ "xz"
vim vim-insert ☇ x-ray · this ⮕ "xthis"
vim vim-insert ☇ x-ray · whiskey · Victor ⮕ "xwv"
vim vim-insert ☇ x-ray ⮕ "x"
vim vim-insert ☇ you ⮕ "you"
vim vim-insert ☇ zero ⮕ "0"
vim vim-insert ☇ {\left-curly-bracket\left curly bracket ⮕ "{"
vim vim-insert ☇ }\right-curly-bracket\right curly bracket ⮕ "}"
vim vim-insert ☇ ~\tilde\tilde · _\underscore\underscore ⮕ "~_"
vim vim-insert ☇ ~\tilde\tilde ⮕ "~"
vim vim-insert ☇ –\dash\dash ⮕ "-"
vim vim-tree ☇ change ⮕ "C"
vim vim-tree ☇ five · down ⮕ "5" <down>
vim vim-tree ☇ five · up ⮕ "5" <up>
vim vim-tree ☇ one\pronoun · up · slap ⮕ "1" <up> <enter>
vim vim-tree ☇ six · up ⮕ "6" <up>
vim vim-tree ☇ slap ⮕ <enter>
vim vim-tree ☇ three · down · slap ⮕ "3" <down> <enter>
vim vim-tree ☇ to · up · slap ⮕ "2" <up> <enter>
vim vim-tree ☇ up · change ⮕ <up> "C"
vim vim-tree ☇ up · up · change ⮕ <up> <up> "C"
vim vim-tree ☇ up · up · slap ⮕ <up> <up> <enter>
vim vim-visual ☇ D\letter ⮕ null
vim vim-visual ☇ change · exclamation ⮕ "c" [mode -vim-visual] [mode +vim-insert] "!"
vim vim-visual ☇ change ⮕ "c" [mode -vim-visual] [mode +vim-insert]
vim vim-visual ☇ delete ⮕ "d" [mode -vim-visual]
vim vim-visual ☇ dictate · D\letter\letter D ⮕ "d"
vim vim-visual ☇ dictate · QED ⮕ "qed"
vim vim-visual ☇ dictate · of ⮕ "of"
vim vim-visual ☇ dictate · the ⮕ "the"
vim vim-visual ☇ down · down · yank ⮕ <down> <down> "y" [mode -vim-visual]
vim vim-visual ☇ down ⮕ <down>
vim vim-visual ☇ escape ⮕ <escape>
vim vim-visual ☇ five · right ⮕ [repeat 5 <right>]
vim vim-visual ☇ key · x-ray ⮕ "x"
vim vim-visual ☇ left ⮕ <left>
vim vim-visual ☇ right · right · right ⮕ <right> <right> <right>
vim vim-visual ☇ right · right ⮕ <right> <right>
vim vim-visual ☇ save ⮕ <escape> ":w" <enter>
vim vim-visual ☇ six · left ⮕ [repeat 6 <left>]
vim vim-visual ☇ the ⮕ null
vim vim-visual ☇ three · left ⮕ [repeat 3 <left>]
vim vim-visual ☇ three · right ⮕ [repeat 3 <right>]
vim vim-visual ☇ to · left · visual · three · left · key · x-ray ⮕ null
vim vim-visual ☇ to · write ⮕ null
vim vim-visual ☇ two · left ⮕ [repeat 2 <left>]
vim vim-visual ☇ up · yank ⮕ <up> "y" [mode -vim-visual]
vim vim-visual ☇ up ⮕ <up>
vim vim-visual ☇ visual · three · left ⮕ null
vim vim-visual ☇ visual ⮕ null
vim vim-visual ☇ yank · line ⮕ null
vim vim-visual ☇ yank ⮕ "y" [mode -vim-visual]
vim ☇ 's\s\s ⮕ null
vim ☇ (\left-parenthesis\left paren ⮕ "("
vim ☇ /\slash\forward slash ⮕ "/"
vim ☇ C\uppercase-letter\capital C · C\letter ⮕ "Cc"
vim ☇ C\uppercase-letter\capital C ⮕ "C"
vim ☇ Delta ⮕ "d"
vim ☇ Dick ⮕ null
vim ☇ Doctor ⮕ null
vim ☇ F\letter ⮕ "f"
vim ☇ Ford · (\left-parenthesis\left paren ⮕ null
vim ☇ Ford · Ford ⮕ null
vim ☇ Ford · kilo ⮕ null
vim ☇ Ford ⮕ null
vim ☇ J\uppercase-letter\capital J ⮕ "J"
vim ☇ Juliet ⮕ "j"
vim ☇ K\letter ⮕ "k"
vim ☇ Key · J\uppercase-letter\capital J ⮕ "J"
vim ☇ M\letter · a\determiner ⮕ "ma"
vim ☇ Mark ⮕ null
vim ☇ Pixie ⮕ null
vim ☇ Québec ⮕ "q"
vim ☇ T\letter ⮕ "t"
vim ☇ Tab · one\number ⮕ "	1"
vim ☇ Tate ⮕ null
vim ☇ \new-line\next line ⮕ null
vim ☇ ]\right-square-bracket\right square bracket ⮕ "]"
vim ☇ ^\caret\caret ⮕ "^"
vim ☇ a\determiner · hundred · down ⮕ "100" <down>
vim ☇ a\determiner · hundred · up ⮕ "100" <up>
vim ☇ alter ⮕ null
vim ☇ and · do ⮕ "u"
vim ☇ and · macro ⮕ null
vim ☇ and ⮕ "&"
vim ☇ append · arrow ⮕ "a" [mode +vim-insert] " => "
vim ☇ append · end ⮕ "A" [mode +vim-insert]
vim ☇ append ⮕ "a" [mode +vim-insert]
vim ☇ as ⮕ null
vim ☇ at · a\determiner ⮕ "@a"
vim ☇ back · back ⮕ null
vim ☇ back · be ⮕ "Fb"
vim ☇ backspace ⮕ <backspace>
vim ☇ big · paste ⮕ "P"
vim ☇ big · replace ⮕ "R" [mode +vim-insert]
vim ☇ brightness · hundred ⮕ null
vim ☇ change · )\right-parenthesis\right bracket ⮕ "c)" [mode +vim-insert]
vim ☇ change · around · )\right-parenthesis\right paren ⮕ "ca)" [mode +vim-insert]
vim ☇ change · around · curly ⮕ "ca}" [mode +vim-insert]
vim ☇ change · around · right · curly ⮕ "ca}" [mode +vim-insert]
vim ☇ change · around · rightly ⮕ null
vim ☇ change · around ⮕ null
vim ☇ change · in · right · curly ⮕ "ci}" [mode +vim-insert]
vim ☇ change · in · such · rights · curly ⮕ null
vim ☇ change · inside · )\right-parenthesis\right paren ⮕ "ci)" [mode +vim-insert]
vim ☇ change · inside · curly ⮕ "ci}" [mode +vim-insert]
vim ☇ change · inside · right · curly ⮕ "ci}" [mode +vim-insert]
vim ☇ change · inside · word ⮕ "ciw" [mode +vim-insert]
vim ☇ change · line ⮕ "cc" [mode +vim-insert]
vim ☇ change · to · )\right-parenthesis\right paren ⮕ "ct)" [mode +vim-insert]
vim ☇ change · to · /\slash\slash ⮕ "ct/" [mode +vim-insert]
vim ☇ change · to · space ⮕ "ct " [mode +vim-insert]
vim ☇ change · until · /\slash\slash ⮕ "ct/" [mode +vim-insert]
vim ☇ change · until · Tango ⮕ "ctt" [mode +vim-insert]
vim ☇ change · until · and ⮕ "ct&" [mode +vim-insert]
vim ☇ change · word · ABC ⮕ "cw" [mode +vim-insert] "abc"
vim ☇ change · word · key · are ⮕ "cw" [mode +vim-insert] "keyare"
vim ☇ change · word · repeat ⮕ "cw" [mode +vim-insert] "repeat"
vim ☇ change · word ⮕ "cw" [mode +vim-insert]
vim ☇ copy · line ⮕ null
vim ☇ create · macro · x-ray ⮕ "qx"
vim ☇ curly ⮕ null
vim ☇ cut ⮕ "x"
vim ☇ daughter ⮕ null
vim ☇ deep ⮕ null
vim ☇ delete · line · up ⮕ "dd" <up>
vim ☇ delete · line ⮕ "dd"
vim ☇ delete · to · Tango ⮕ "dtt"
vim ☇ delete · to · space ⮕ "dt "
vim ☇ delete · until · /\slash\slash ⮕ "dt/"
vim ☇ delete · until · Tango ⮕ "dtt"
vim ☇ delete · until · \backslash\backslash ⮕ "dt\"
vim ☇ delete · until · backspace ⮕ null
vim ☇ delete · until · see ⮕ "dtc"
vim ☇ delete · until · three ⮕ "dt3"
vim ☇ delete · word ⮕ "dw"
vim ☇ delete ⮕ null
vim ☇ dictate · C\uppercase-letter\capital C ⮕ "C"
vim ☇ dictate · Mike · alpha ⮕ "ma"
vim ☇ dictate · Pixie ⮕ "pixie"
vim ☇ dictate · Victor ⮕ "v"
vim ☇ dictate · Yankee ⮕ "y"
vim ☇ dictate · hello ⮕ "hello"
vim ☇ dictate · news ⮕ "news"
vim ☇ dictate · nine ⮕ "9"
vim ☇ dictate · one\pronoun · word ⮕ "1word"
vim ☇ dictate · the ⮕ "the"
vim ☇ dictate · their ⮕ "their"
vim ☇ dictate · twenty ⮕ "20"
vim ☇ dictate · word · one\number ⮕ "one"
vim ☇ dictate · x-ray · insert · Charlie ⮕ "xinsertc"
vim ☇ dictate · x-ray · x-ray · x-ray · x-ray · x-ray ⮕ "xxxxx"
vim ☇ dictate · x-ray · x-ray ⮕ "xx"
vim ☇ dictate · x-ray ⮕ "x"
vim ☇ dictate ⮕ null
vim ☇ dollar ⮕ "$"
vim ☇ dominate ⮕ null
vim ☇ double · backspace ⮕ [repeat 2 <backspace>]
vim ☇ double · right ⮕ [repeat 2 <right>]
vim ☇ double · space ⮕ null
vim ☇ down · down · down ⮕ <down> <down> <down>
vim ☇ down · down ⮕ <down> <down>
vim ☇ down · eight ⮕ <down> "8"
vim ☇ down · into ⮕ <down> <enter>
vim ☇ down ⮕ <down>
vim ☇ downturn ⮕ null
vim ☇ eight · down ⮕ "8" <down>
vim ☇ eight ⮕ "8"
vim ☇ end · macro ⮕ "q"
vim ☇ escape · and · do ⮕ <escape> "u"
vim ☇ escape · append ⮕ <escape> "a" [mode +vim-insert]
vim ☇ escape · escape · escape ⮕ <escape> <escape> <escape>
vim ☇ escape · except ⮕ null
vim ☇ escape · insert ⮕ <escape> "i" [mode +vim-insert]
vim ☇ escape · visual ⮕ <escape> "v" [mode +vim-visual]
vim ☇ escape ⮕ <escape>
vim ☇ excellent ⮕ null
vim ☇ favourite · as ⮕ null
vim ☇ file · voice ⮕ <escape> ":FZF /home/josh/voice-code/pegvoice/src" <enter>
vim ☇ file ⮕ <escape> ":FZF /home/josh" <enter>
vim ☇ find · F\letter ⮕ <escape> "/f"
vim ☇ find · and · do ⮕ <escape> "/&do"
vim ☇ find · equal · slap ⮕ <escape> "/ === slap"
vim ☇ find · equal ⮕ <escape> "/ === "
vim ☇ find · equals ⮕ <escape> "/ === "
vim ☇ find · find ⮕ <escape> "/find"
vim ☇ find · link ⮕ <escape> "/link"
vim ☇ find · normal ⮕ <escape> "/normal"
vim ☇ find · to ⮕ <escape> "/2"
vim ☇ find · typed · TW ⮕ <escape> "/typedtw"
vim ☇ find · voice ⮕ <escape> "/voice"
vim ☇ find ⮕ <escape> "/"
vim ☇ five · )\right-parenthesis\right paren · a\determiner ⮕ "5)a"
vim ☇ five · I\pronoun ⮕ "5i"
vim ☇ five · down ⮕ "5" <down>
vim ☇ five · forward ⮕ null
vim ☇ five · right ⮕ "5" <right>
vim ☇ five · up ⮕ "5" <up>
vim ☇ for · right ⮕ "4" <right>
vim ☇ for · ten ⮕ "410"
vim ☇ for · up ⮕ "4" <up>
vim ☇ forward · (\left-parenthesis\open paren ⮕ "f("
vim ☇ forward · C\letter ⮕ "fc"
vim ☇ forward · P/E\\PE ⮕ null
vim ☇ forward · P\letter ⮕ "fp"
vim ☇ forward · Tango · forward · Tango ⮕ "ftft"
vim ☇ forward · Tango ⮕ "ft"
vim ☇ forward · a\determiner ⮕ "fa"
vim ☇ forward · equals ⮕ "f="
vim ☇ forward · right · triangle ⮕ "f>"
vim ☇ forward · see ⮕ "fc"
vim ☇ forward ⮕ null
vim ☇ four · left ⮕ "4" <left>
vim ☇ four ⮕ "4"
vim ☇ four-day ⮕ null
vim ☇ ginger · in · a\determiner · right · curly ⮕ null
vim ☇ ginger · in · right · curly ⮕ null
vim ☇ go · to · a\determiner ⮕ <'> "a"
vim ☇ go · to · bottom ⮕ "G"
vim ☇ good · about · them ⮕ null
vim ☇ good · bottom ⮕ null
vim ☇ great · macro · X\letter ⮕ "qx"
vim ☇ great · macro · backs · up ⮕ null
vim ☇ great · macro · x-ray ⮕ "qx"
vim ☇ great · macro ⮕ null
vim ☇ green · brightness · one\number · hundred ⮕ [i3 "exec brightness 100"]
vim ☇ hello · _\underscore\underscore · world ⮕ null
vim ☇ hello · world ⮕ null
vim ☇ hello ⮕ null
vim ☇ in · clan · paste ⮕ null
vim ☇ insert · Esker ⮕ "i" [mode +vim-insert] "esker"
vim ☇ insert · F\letter ⮕ "i" [mode +vim-insert] "f"
vim ☇ insert · F\uppercase-letter\capital F ⮕ "i" [mode +vim-insert] "F"
vim ☇ insert · Zulu ⮕ "i" [mode +vim-insert] "z"
vim ☇ insert · a\determiner · space · team · space ⮕ "i" [mode +vim-insert] "a team "
vim ☇ insert · big · Z\letter ⮕ "i" [mode +vim-insert] "Z"
vim ☇ insert · hello · equals · five ⮕ "i" [mode +vim-insert] "hello === 5"
vim ☇ insert · hello ⮕ "i" [mode +vim-insert] "hello"
vim ☇ insert · letter ⮕ "i" [mode +vim-insert] "letter"
vim ☇ insert · sooner ⮕ "i" [mode +vim-insert] "z"
vim ☇ insert · space · escape ⮕ "i" [mode +vim-insert] " " <escape>
vim ☇ insert · x-ray ⮕ "i" [mode +vim-insert] "x"
vim ☇ insert ⮕ "i" [mode +vim-insert]
vim ☇ into ⮕ <enter>
vim ☇ is ⮕ null
vim ☇ key · .\dot\dot ⮕ "."
vim ☇ key · ]\right-square-bracket\right square bracket ⮕ "]"
vim ☇ key · }\right-curly-bracket\right curly bracket ⮕ "}"
vim ☇ left · deaf · left ⮕ null
vim ☇ left · left · left ⮕ <left> <left> <left>
vim ☇ left · left ⮕ <left> <left>
vim ☇ left · paste ⮕ <left> "p"
vim ☇ left · visual ⮕ <left> "v" [mode +vim-visual]
vim ☇ left ⮕ <left>
vim ☇ love ⮕ null
vim ☇ machine ⮕ null
vim ☇ mark · a\determiner ⮕ "ma"
vim ☇ move · window · left ⮕ [i3 "move left"]
vim ☇ next ⮕ "n"
vim ☇ nought · up ⮕ "0" <up>
vim ☇ nought ⮕ "0"
vim ☇ of ⮕ null
vim ☇ one\number · hundred · \spelling-cap\cap ⮕ null
vim ☇ one\number · hundred · and · one\number · up ⮕ "101" <up>
vim ☇ one\number · hundred · and ⮕ "100"
vim ☇ one\number · hundred · up ⮕ "100" <up>
vim ☇ one\number · up ⮕ "1" <up>
vim ☇ one\pronoun · down ⮕ "1" <down>
vim ☇ one\pronoun · up ⮕ "1" <up>
vim ☇ open · _\underscore\underscore ⮕ "o" [mode +vim-insert] "_"
vim ☇ open · above ⮕ "O" [mode +vim-insert]
vim ☇ open · brother ⮕ "o" [mode +vim-insert] "b"
vim ☇ open · chrome ⮕ [i3 "exec google-chrome"]
vim ☇ open · dictate · one\pronoun · word ⮕ "o" [mode +vim-insert] "1word"
vim ☇ open · file ⮕ "o" [mode +vim-insert] "file"
vim ☇ open · hello · _\underscore\underscore · world ⮕ "o" [mode +vim-insert] "hello_world"
vim ☇ open · hello ⮕ "o" [mode +vim-insert] "hello"
vim ☇ open · incognito ⮕ [i3 "exec google-chrome -incognito"]
vim ☇ open · news · .\dot\dot · Y\letter · combination · .com\\dot com ⮕ "o" [mode +vim-insert] "news.ycombination.com"
vim ☇ open · number · one\number · zero · zero ⮕ "o" [mode +vim-insert] "100"
vim ☇ open · number · one\number ⮕ "o" [mode +vim-insert] "1"
vim ☇ open · word · one\number · one\number ⮕ "o" [mode +vim-insert] "one1"
vim ☇ open ⮕ "o" [mode +vim-insert]
vim ☇ p.m.\\PM · Key · a\determiner ⮕ null
vim ☇ page · down · page · down ⮕ <pagedown> <pagedown>
vim ☇ page · down ⮕ <pagedown>
vim ☇ page · one\number ⮕ null
vim ☇ page · up ⮕ <pageup>
vim ☇ paste · above ⮕ "pO" [mode +vim-insert]
vim ☇ paste · paste ⮕ "pp"
vim ☇ paste ⮕ "p"
vim ☇ pipe ⮕ "|"
vim ☇ play · X\letter ⮕ "@x"
vim ☇ play · x-ray ⮕ "@x"
vim ☇ repeat ⮕ "."
vim ☇ replace · .\dot\dot ⮕ "r."
vim ☇ replace · C\letter ⮕ "rc"
vim ☇ replace · x-ray ⮕ "rx"
vim ☇ replace ⮕ null
vim ☇ right · )\right-parenthesis\right bracket ⮕ <right> ")"
vim ☇ right · eye · drug · right ⮕ null
vim ☇ right · paste ⮕ <right> "p"
vim ☇ right · right · replace · Z\letter ⮕ <right> <right> "rz"
vim ☇ right · right · right · right ⮕ <right> <right> <right> <right>
vim ☇ right · right · right ⮕ <right> <right> <right>
vim ☇ right · right ⮕ <right> <right>
vim ☇ right · visual · to · write ⮕ null
vim ☇ right ⮕ <right>
vim ☇ save · as ⮕ <escape> ":w "
vim ☇ save · excellent ⮕ null
vim ☇ save · except ⮕ null
vim ☇ save · exit ⮕ <escape> ":wq" <enter>
vim ☇ save · quite ⮕ null
vim ☇ save ⮕ <escape> ":w" <enter>
vim ☇ screen · brightness · fifty ⮕ [i3 "exec brightness 50"]
vim ☇ screen · brightness · hundred ⮕ null
vim ☇ screen · brightness · one\number · hundred ⮕ [i3 "exec brightness 100"]
vim ☇ screen · brightness · screen · brightness · hundred ⮕ null
vim ☇ screen · five ⮕ [i3 "workspace 5"]
vim ☇ screen · one\number ⮕ [i3 "workspace 1"]
vim ☇ search · and · are · escape · good · of · a\determiner ⮕ null
vim ☇ search · find · Delta ⮕ null
vim ☇ search ⮕ null
vim ☇ seven · down ⮕ "7" <down>
vim ☇ seven · up ⮕ "7" <up>
vim ☇ six · cut ⮕ "6x"
vim ☇ six · up ⮕ "6" <up>
vim ☇ slap · slap · he · alkaline ⮕ null
vim ☇ slap · slap · slap · slap ⮕ <enter> <enter> <enter> <enter>
vim ☇ slap · slap · slap ⮕ <enter> <enter> <enter>
vim ☇ slap · slap ⮕ <enter> <enter>
vim ☇ slap ⮕ <enter>
vim ☇ star ⮕ "*"
vim ☇ switch · buffer · three · down ⮕ <escape> [repeat 2 <ctrl-w>] "3" <down>
vim ☇ switch · buffer ⮕ <escape> [repeat 2 <ctrl-w>]
vim ☇ ten · Ford ⮕ null
vim ☇ ten · down ⮕ "10" <down>
vim ☇ ten · left ⮕ "10" <left>
vim ☇ ten · right ⮕ "10" <right>
vim ☇ ten · up ⮕ "10" <up>
vim ☇ test ⮕ null
vim ☇ the ⮕ null
vim ☇ thirty · four · down ⮕ "34" <down>
vim ☇ three · down ⮕ "3" <down>
vim ☇ three · left ⮕ "3" <left>
vim ☇ three · right ⮕ "3" <right>
vim ☇ three · up ⮕ "3" <up>
vim ☇ tight · x-ray · pepper ⮕ null
vim ☇ to · a\determiner ⮕ "2a"
vim ☇ to · cut ⮕ "2x"
vim ☇ to · left ⮕ "2" <left>
vim ☇ to · write ⮕ null
vim ☇ to ⮕ "2"
vim ☇ told ⮕ null
vim ☇ tree · voice ⮕ <escape> ":NERDTree /home/josh/voice-code/pegvoice/src" <enter>
vim ☇ triangle ⮕ null
vim ☇ triple · left ⮕ [repeat 3 <left>]
vim ☇ twenty · down ⮕ "20" <down>
vim ☇ twenty · up ⮕ "20" <up>
vim ☇ two · down ⮕ "2" <down>
vim ☇ two · hundred · down ⮕ "200" <down>
vim ☇ two · hundred · up ⮕ "200" <up>
vim ☇ two · hundred ⮕ "200"
vim ☇ two · left ⮕ "2" <left>
vim ☇ type · Papa · x-ray ⮕ "px"
vim ☇ type · X\letter · P\letter ⮕ "xp"
vim ☇ type · polo · x-ray ⮕ null
vim ☇ type · x-ray · Papa ⮕ "xp"
vim ☇ type · x-ray · pepper ⮕ "xp"
vim ☇ type ⮕ null
vim ☇ under ⮕ "u"
vim ☇ undo ⮕ "u"
vim ☇ up · forward · space · append ⮕ <up> "f a" [mode +vim-insert]
vim ☇ up · right ⮕ <up> <right>
vim ☇ up · slap ⮕ <up> <enter>
vim ☇ up · ten ⮕ <up> "10"
vim ☇ up · up ⮕ <up> <up>
vim ☇ up ⮕ <up>
vim ☇ very · up ⮕ null
vim ☇ visual · block · down · right ⮕ <ctrl-v> [mode +vim-visual] <down> <right>
vim ☇ visual · block · up · up ⮕ <ctrl-v> [mode +vim-visual] <up> <up>
vim ☇ visual · left · three ⮕ null
vim ☇ visual · line ⮕ "V" [mode +vim-visual]
vim ☇ visual · right · change · in · the ⮕ "v" [mode +vim-visual] <right> "c" [mode -vim-visual] [mode +vim-insert] "inthe"
vim ☇ visual · right ⮕ "v" [mode +vim-visual] <right>
vim ☇ visual · rights · delete ⮕ null
vim ☇ visual · three · left ⮕ "v" [mode +vim-visual] [repeat 3 <left>]
vim ☇ visual ⮕ "v" [mode +vim-visual]
vim ☇ wake up ⮕ null
vim ☇ wake · up ⮕ [noop]
vim ☇ window · right ⮕ [i3 "focus right"]
vim ☇ word · type ⮕ "type"
vim ☇ writer · excellent ⮕ null
vim ☇ x-ray · whiskey · Victor ⮕ "xwv"
vim ☇ x-ray ⮕ "x"
vim ☇ yank · line · paste · based ⮕ null
vim ☇ yank · line · paste ⮕ "yyp"
vim ☇ yank · line ⮕ "yy"
vim ☇ yank · word · (\left-parenthesis\left bracket · left · paste ⮕ "yw(" <left> "p"
vim ☇ }\right-curly-bracket\right curly bracket ⮕ "}"
vim-visual ☇ test ⮕ null
